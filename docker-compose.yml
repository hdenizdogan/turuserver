services:
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    restart: always
    labels:
      tsdproxy.enable: "true"
      tsdproxy.name: "jellyfin"
      tsdproxy.funnel: "true"
    ports:
      - "8096:8096"
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - jellyfin_config:/config
      - jellyfin_cache:/cache
      - /mnt/media:/media
      - /opt/jellyfin-fonts:/usr/share/fonts/truetype/jellyfin-fonts:ro
    env_file:
      - .env
    networks:
      - app_net

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    labels:
      tsdproxy.enable: "true"
      tsdproxy.name: "prowlarr"
      tsdproxy.funnel: "true"
      tsdproxy.container_port: 8090
    ports:
      - "9696:9696"
    env_file:
      - .env
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /mnt/docker/prowlarr:/config
      - /mnt/media:/mnt/media
      - /mnt/media/torrent:/mnt/media/torrent
      - /mnt/media/torrent:/downloads
    networks:
      - app_net

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    labels:
      tsdproxy.enable: "true"
      tsdproxy.name: "sonarr"
      tsdproxy.funnel: "true"
      tsdproxy.container_port: 8989
    ports:
      - "8989:8989"
    env_file:
      - .env
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /mnt/docker/sonarr:/config
      - /mnt/media:/mnt/media
      - /mnt/media/torrent:/mnt/media/torrent
      - /mnt/media/torrent:/downloads
    networks:
      - app_net

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    labels:
      tsdproxy.enable: "true"
      tsdproxy.name: "radarr"
      tsdproxy.funnel: "true"
      tsdproxy.container_port: 7878
    ports:
      - "7878:7878"
    env_file:
      - .env
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /mnt/docker/radarr:/config
      - /mnt/media:/mnt/media
      - /mnt/media/torrent:/mnt/media/torrent
      - /mnt/media/torrent:/downloads
    networks:
      - app_net

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    labels:
      tsdproxy.enable: "true"
      tsdproxy.name: "bazarr"
      tsdproxy.funnel: "true"
      tsdproxy.container_port: 6767
    ports:
      - "6767:6767"
    env_file:
      - .env
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /mnt/media:/mnt/media
      - /mnt/docker/bazarr:/config
    networks:
      - app_net

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    labels:
      tsdproxy.enable: "true"
      tsdproxy.name: "qbittorrent"
      tsdproxy.funnel: "true"
      tsdproxy.container_port: 8090
    ports:
      - "8090:8090"
      - "6881:6881"
      - "6881:6881/udp"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - WEBUI_PORT=8090
    env_file:
      - .env
    volumes:
      - /mnt/media:/mnt/media
      - /mnt/media/torrent:/downloads
      - /mnt/docker/qbittorrent/config:/config
    networks:
      - app_net

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: unless-stopped
    depends_on:
      - jellyfin
    labels:
      tsdproxy.enable: "true"
      tsdproxy.name: "jellyseerr"
      tsdproxy.funnel: "true"
      tsdproxy.container_port: 5055
    ports:
      - "5055:5055"
    env_file:
      - .env
    volumes:
      - /mnt/docker/jellyseer/config:/app/config
      - /mnt/media:/mnt/media
    networks:
      - app_net

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    labels:
      tsdproxy.enable: "true"
      tsdproxy.name: "portainer"
      tsdproxy.funnel: "true"
      tsdproxy.container_port: 9000
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - app_net

  agent:
    image: portainer/agent:latest
    container_name: portainer_agent
    restart: always
    ports:
      - "9001:9001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - /:/host
    networks:
      - portainer_net

  nginx:
    image: nginx:alpine
    extra_hosts:
      - "host.docker.internal:host-gateway"
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    depends_on:
      - jellyfin
      - qbittorrent
      - jellyseerr
      - portainer
    ports:
      - "80:80"
    networks:
      - app_net

  tsdproxy:
    image: almeidapaulopt/tsdproxy:latest
    container_name: tsdproxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - tsdproxydata:/data
    environment:
      - TSDPROXY_AUTHKEY=$TSFUNNEL_AUTHKEY
      - TSDPROXY_HOSTNAME=172.18.0.1
      - DOCKER_HOST=unix:///var/run/docker.sock
    restart: unless-stopped
    networks:
      - app_net

networks:
  portainer_net:
  app_net:
    driver: bridge


volumes:
  portainer_data:
  jellyfin_config:
  jellyfin_cache:
  tsdproxydata: