services:
  # Jellyfin media server
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    restart: always
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - jellyfin_config:/config
      - jellyfin_cache:/cache
      - /mnt/media:/media
      - /opt/jellyfin-fonts:/usr/share/fonts/truetype/jellyfin-fonts:ro
    env_file:
      - .env

  jellyfin_tailscale:
    image: tailscale/tailscale
    container_name: jellyfin_tailscale
    hostname: jellyfin-turuserver
    network_mode: "container:jellyfin"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - /dev/net/tun:/dev/net/tun
      - ./tailscale-data/jellyfin:/var/lib/tailscale
    env_file:
      - .env
    depends_on:
      - jellyfin
    command: >
      sh -c "
        tailscaled & sleep 2 &&
        tailscale up --auth-key=$TSAUTHKEY --hostname=jellyfin-turuserver &&
        tailscale funnel --https=443 --set-path=/ 127.0.0.1:8096
      "
    restart: unless-stopped

  # Radarr movie automation
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /mnt/docker/radarr:/config
      - /mnt/media:/mnt/media
      - /mnt/media/torrent:/mnt/media/torrent
      - /mnt/media/torrent:/downloads

  radarr_tailscale:
    image: tailscale/tailscale
    container_name: radarr_tailscale
    hostname: radarr-turuserver
    network_mode: "container:radarr"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - /dev/net/tun:/dev/net/tun
      - ./tailscale-data/radarr:/var/lib/tailscale
    env_file:
      - .env
    depends_on:
      - radarr
    command: >
      sh -c "
        tailscaled & sleep 2 &&
        tailscale up --auth-key=$TSAUTHKEY --hostname=radarr-turuserver &&
        tailscale funnel --https=443 --set-path=/ 127.0.0.1:7878
      "
    restart: unless-stopped

  # Sonarr TV series automation
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /mnt/docker/sonarr:/config
      - /mnt/media:/mnt/media
      - /mnt/media/torrent:/mnt/media/torrent
      - /mnt/media/torrent:/downloads

  sonarr_tailscale:
    image: tailscale/tailscale
    container_name: sonarr_tailscale
    hostname: sonarr-turuserver
    network_mode: "container:sonarr"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - /dev/net/tun:/dev/net/tun
      - ./tailscale-data/sonarr:/var/lib/tailscale
    env_file:
      - .env
    depends_on:
      - sonarr
    command: >
      sh -c "
        tailscaled & sleep 2 &&
        tailscale up --auth-key=$TSAUTHKEY --hostname=sonarr-turuserver &&
        tailscale funnel --https=443 --set-path=/ 127.0.0.1:8989
      "
    restart: unless-stopped

  # qBittorrent browser client
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    environment:
      - BASE_URL=/qbittorrent
      - PUID=${PUID}
      - PGID=${PGID}
    env_file:
      - .env
    volumes:
      - /mnt/media:/mnt/media
      - /mnt/media/torrent:/downloads
      - /mnt/docker/qbittorrent/config:/config

  qbittorrent_tailscale:
    image: tailscale/tailscale
    container_name: qbittorrent_tailscale
    hostname: qbittorrent-turuserver
    network_mode: "container:qbittorrent"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - /dev/net/tun:/dev/net/tun
      - ./tailscale-data/qbittorrent:/var/lib/tailscale
    env_file:
      - .env
    depends_on:
      - qbittorrent
    command: >
      sh -c "
        tailscaled & sleep 2 &&
        tailscale up --auth-key=$TSAUTHKEY --hostname=qbittorrent-turuserver &&
        tailscale funnel --https=443 --set-path=/ 127.0.0.1:8080
      "
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    depends_on:
      - jellyfin
      - radarr
      - sonarr
      - qbittorrent
    ports:
      - "80:80"   # expose port 80 on host


volumes:
  jellyfin_config:
  jellyfin_cache:
