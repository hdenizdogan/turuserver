services:
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    restart: always
    environment:
      - BASE_URL=/jellyfin
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - jellyfin_config:/config
      - jellyfin_cache:/cache
      - /mnt/media:/media
      - /opt/jellyfin-fonts:/usr/share/fonts/truetype/jellyfin-fonts:ro
    env_file:
      - .env

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /mnt/docker/prowlarr:/config
      - /mnt/media:/mnt/media
      - /mnt/media/torrent:/mnt/media/torrent
      - /mnt/media/torrent:/downloads

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /mnt/docker/sonarr:/config
      - /mnt/media:/mnt/media
      - /mnt/media/torrent:/mnt/media/torrent
      - /mnt/media/torrent:/downloads

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /mnt/docker/radarr:/config
      - /mnt/media:/mnt/media
      - /mnt/media/torrent:/mnt/media/torrent
      - /mnt/media/torrent:/downloads

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /mnt/media:/mnt/media
      - /mnt/docker/bazarr:/config

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    environment:
      - BASE_URL=/qbittorrent
      - PUID=${PUID}
      - PGID=${PGID}
    env_file:
      - .env
    volumes:
      - /mnt/media:/mnt/media
      - /mnt/media/torrent:/downloads
      - /mnt/docker/qbittorrent/config:/config

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: unless-stopped
    depends_on:
      - jellyfin
    env_file:
      - .env
    volumes:
      - /mnt/docker/jellyseer/config:/app/config
      - /mnt/media:/mnt/media

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    environment:
      - BASE_URL=/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  agent:
    image: portainer/agent:latest
    container_name: portainer_agent
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - /:/host

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    depends_on:
      - jellyfin
      - qbittorrent
      - jellyseerr
      - portainer
    ports:
      - "80:80"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  tailscale:
    image: tailscale/tailscale
    container_name: tailscale
    hostname: turuserver
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - /dev/net/tun:/dev/net/tun
      - ./tailscale-data:/var/lib/tailscale
    env_file:
      - .env
    depends_on:
      - nginx
    command: >
      sh -c "
        tailscaled & sleep 2 &&
        tailscale up --auth-key=$TSFUNNEL_AUTHKEY --hostname=$HOSTNAME &&
        tailscale funnel --https=443 --set-path=/ 127.0.0.1:80
      "
    restart: unless-stopped

volumes:
  portainer_data:
  jellyfin_config:
  jellyfin_cache:

networks:
  default:
    name: app_net
